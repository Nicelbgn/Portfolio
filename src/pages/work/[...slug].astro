---
import { type CollectionEntry, getCollection } from 'astro:content';

// Importation des composants et mises en page nécessaires
import BaseLayout from '../../layouts/BaseLayout.astro';

import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';

// Interface définissant les propriétés attendues par le composant pour chaque entrée dans la collection 'work'
interface Props {
	entry: CollectionEntry<'work'>;
}

// Fonction pour générer les chemins statiques pour chaque page basée sur les fichiers Markdown de la collection 'work'
export async function getStaticPaths() {
	const work = await getCollection('work');
	return work.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}
// Extraction de la propriété 'entry' du contexte Astro.props

const { entry } = Astro.props;
// Récupération du rendu du contenu de l'entré
const { Content } = await entry.render();
// Utilisation du composant BaseLayout avec des propriétés spécifiques
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<a class="back-link" href="/work/"><Icon icon="arrow-left" /> Projets</a>
					<Hero title={entry.data.title} align="start">
						<div class="details">
							<div class="tags">
								{entry.data.tags.map((t) => <Pill>{t}</Pill>)}
							</div>
							<p class="description">{entry.data.description}</p>
						</div>
					</Hero>
				</div>
			</header>
			<main class="wrapper">
				<div class="stack gap-10 content">
					{entry.data.img && <img src={entry.data.img} alt={entry.data.img_alt || ''} />}
					<div class="content">
						<Content />
					</div>
				</div>
			</main>
		</div>
		{/* Ajout du composant ContactCTA en bas de la page */}
		<ContactCTA />
	</div>
</BaseLayout>
